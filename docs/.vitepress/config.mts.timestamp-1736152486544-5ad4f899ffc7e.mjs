// docs/.vitepress/config.mts
import { defineConfigWithTheme } from "file:///D:/personal/study-docs/node_modules/vitepress/dist/node/index.js";

// docs/.vitepress/meta.ts
var github = "https://github.com/chodocs/chodocs";
var githubSourceContentRegex = new RegExp("^https://(((raw|user-images|camo).githubusercontent.com))/.*", "i");
var googleFontRegex = new RegExp("^https://fonts.googleapis.com/.*", "i");
var googleStaticFontRegex = new RegExp("^https://fonts.gstatic.com/.*", "i");
var jsdelivrCDNRegex = new RegExp("^https://cdn.jsdelivr.net/.*", "i");

// docs/.vitepress/sidebar/webFrame/vue/config.ts
var config_default = [
  {
    text: "\u57FA\u7840\u7528\u6CD5",
    collapsed: false,
    items: [
      {
        text: "new Image() \u9884\u52A0\u8F7D \u4E3A\u4EC0\u4E48\u6BD4 <img>\u76F4\u63A5\u52A0\u8F7D\u8981\u597D\uFF1F",
        link: "/markdown/webFrame/vue/img_load"
      },
      {
        text: "\u6574\u7406\u591A\u7EC4\u4EF6\u9891\u7E41\u5BFC\u5165\u516C\u7528\u7EC4\u4EF6",
        link: "/markdown/webFrame/vue/rollup_plugin_inject"
      },
      {
        text: "Vue\u7684ref\u3001shallowRef\u3001reactive\u7684\u4F7F\u7528",
        link: "/markdown/webFrame/vue/ref_shallowRef_reactive"
      },
      {
        text: "\u901A\u7528\u56FE\u7247\u5F15\u5165",
        link: "/markdown/webFrame/vue/introduce_pictures"
      },
      {
        text: "vue2\u72EC\u6709\u56FE\u7247\u5F15\u5165",
        link: "/markdown/webFrame/vue/introduce_pictures_vue2"
      },
      {
        text: "vue3\u72EC\u6709\u56FE\u7247\u5F15\u5165",
        link: "/markdown/webFrame/vue/introduce_pictures_vue3"
      }
    ]
  }
];

// docs/.vitepress/sidebar/webFrame/TS/config.ts
var config_default2 = [
  {
    text: "\u57FA\u7840\u7528\u6CD5",
    collapsed: false,
    items: [
      {
        text: "TypeScript\u7684\u57FA\u7840\u4F7F\u7528",
        link: "/markdown/webFrame/ts/base"
      },
      {
        text: "\u51FD\u6570\u91CD\u8F7D",
        link: "/markdown/webFrame/ts/overload"
      }
    ]
  }
];

// docs/.vitepress/sidebar/webFrame/JS/config.ts
var config_default3 = [
  {
    text: "\u57FA\u7840\u7528\u6CD5",
    collapsed: false,
    items: [
      {
        text: "\u9AD8\u7EA7\u524D\u7AEF\u5F00\u53D1\u9700\u8981\u77E5\u9053\u7684 25 \u4E2A JavaScript \u5355\u884C\u4EE3\u7801",
        link: "/markdown/webFrame/JS/advancedUsage"
      }
    ]
  },
  {
    text: "\u8BBE\u8BA1\u6A21\u5F0F",
    collapsed: false,
    items: [
      {
        text: "\u5355\u4F8B\u6A21\u5F0F",
        link: "/markdown/webFrame/JS/designPatterns/singletonPattern"
      },
      {
        text: "\u5DE5\u5382\u6A21\u5F0F",
        link: "/markdown/webFrame/JS/designPatterns/factoryPattern"
      },
      {
        text: "\u72B6\u6001\u6A21\u5F0F",
        link: "/markdown/webFrame/JS/designPatterns/statePattern"
      },
      {
        text: "\u9002\u914D\u5668\u6A21\u5F0F",
        link: "/markdown/webFrame/JS/designPatterns/adapterPattern"
      },
      {
        text: "\u9002\u914D\u5668\u6A21\u5F0F\u548C\u5DE5\u5382\u6A21\u5F0F\u7684\u5DEE\u5F02",
        link: "/markdown/webFrame/JS/designPatterns/AdaptersAndFactories"
      }
    ]
  }
];

// docs/.vitepress/sidebar/webFrame/CSS/config.ts
var config_default4 = [
  {
    text: "\u5E38\u7528css",
    collapsed: false,
    items: [
      {
        text: "\u6807\u7B7E\u5305\u542B\u503C",
        link: "/markdown/webFrame/CSS/commonly/index"
      },
      {
        text: "\u56FE\u7247\u6587\u5B57\u540C\u65F6\u5C45\u4E2D",
        link: "/markdown/webFrame/CSS/imgAndFontCenter/index"
      }
    ]
  },
  {
    text: "\u8FDB\u9636",
    collapsed: false,
    items: [
      {
        text: "JPG \u548C png \u7684\u533A\u522B",
        link: "/markdown/webFrame/CSS/JPGandPNG"
      }
    ]
  }
];

// docs/.vitepress/sidebar/actualCombat/index.ts
var actualCombat_default = [
  {
    text: "\u{1F4BB} \u5B9E\u6218\u64CD\u4F5C",
    collapsed: false,
    items: [
      {
        text: "drag \u62D6\u62FD",
        link: "/markdown/programming/actualCombat/drag"
      }
    ]
  },
  {
    text: "\u8FDB\u9636",
    collapsed: false,
    items: [
      {
        text: "\u4F7F\u7528jsDelivr\u6258\u7BA1GitHub\u56FE\u7247",
        link: "/markdown/programming/actualCombat/advance/jsDelivr"
      }
    ]
  }
];

// docs/.vitepress/sidebar/study/index.ts
var study_default = [
  {
    text: "\u4E2A\u4EBA\u7F16\u7A0B\u8BB0\u5F55",
    collapsed: false,
    items: [
      {
        text: "Call\u7406\u89E3",
        link: "/markdown/programming/study/call-learn"
      },
      {
        text: "npm \u53D1\u5E03\u5305",
        link: "/markdown/programming/study/npm"
      },
      {
        text: "nginx \u7684\u4F5C\u7528",
        link: "/markdown/programming/study/nginx"
      }
    ]
  }
];

// docs/.vitepress/sidebar/summary/2024/index.ts
var __default = [
  {
    text: "\u6708\u5EA6\u603B\u7ED3",
    collapsed: false,
    items: [
      {
        text: "\u4E8C\u6708(February)",
        link: "/markdown/summary/2024/February"
      },
      {
        text: "\u516D\u6708(June)",
        link: "/markdown/summary/2024/June"
      },
      {
        text: "\u5341\u6708(Octorber)",
        link: "/markdown/summary/2024/Octorber"
      },
      {
        text: "\u5341\u4E00\u6708(November)",
        link: "/markdown/summary/2024/November"
      }
    ]
  }
];

// docs/.vitepress/sidebar/interview/index.ts
var interview_default = [
  {
    text: "\u7B97\u6CD5\u7CFB\u5217",
    collapsed: false,
    items: [
      {
        text: "\u6570\u5B57\u7C7B\u578B\u5EA6\u9650\u5236",
        link: "/markdown/interview/algorithm/numberLength"
      }
    ]
  }
];

// docs/.vitepress/sidebar/Git/index.ts
var Git_default = [
  {
    text: "GitHub",
    collapsed: false,
    items: [
      {
        text: "\u5173\u4E8E\u4F7F\u7528git\u4EE3\u7406\u540E\u65E0\u6CD5\u63D0\u4EA4\u4EE3\u7801\u5230GitHub",
        link: "/markdown/Git/GitHub"
      }
    ]
  }
];

// docs/.vitepress/sidebar/index.ts
var sidebar_default = {
  "/markdown/": [],
  "/markdown/interview/": interview_default,
  "/markdown/Git/": Git_default,
  "/markdown/summary/2024/": __default,
  //总结
  "/markdown/programming/actualCombat/": actualCombat_default,
  "/markdown/programming/study/": study_default,
  "/markdown/webFrame/vue/": config_default,
  "/markdown/webFrame/TS/": config_default2,
  "/markdown/webFrame/JS/": config_default3,
  "/markdown/webFrame/CSS/": config_default4
};

// docs/.vitepress/config.mts
import escookConfig from "file:///D:/personal/study-docs/node_modules/@escook/vitepress-theme/dist/config.js";
var config_default5 = defineConfigWithTheme({
  extends: escookConfig,
  title: "Junlin Docs",
  lang: "zh-CN",
  description: "Front-end learning document collection",
  lastUpdated: true,
  locales: {
    root: { label: "\u7B80\u4F53\u4E2D\u6587", lang: "zh-CN" }
  },
  appearance: "dark",
  themeConfig: {
    confetti: false,
    outlineTitle: "\u5BFC\u822A\u680F",
    outline: [2, 3],
    // 表示显示 h2 和 h3 作为导航
    i18nRouting: true,
    lightModeSwitchTitle: "\u5207\u6362\u6697\u4E3B\u9898",
    darkModeSwitchTitle: "\u5207\u6362\u4EAE\u4E3B\u9898",
    search: {
      provider: "local",
      options: {
        locales: {
          zh: {
            translations: {
              button: {
                buttonText: "\u641C\u7D22\u6587\u6863",
                buttonAriaLabel: "\u641C\u7D22\u6587\u6863"
              },
              modal: {
                noResultsText: "\u65E0\u6CD5\u627E\u5230\u76F8\u5173\u7ED3\u679C",
                resetButtonTitle: "\u6E05\u9664\u67E5\u8BE2\u6761\u4EF6",
                footer: {
                  selectText: "\u9009\u62E9",
                  navigateText: "\u5207\u6362"
                }
              }
            }
          }
        }
      }
    },
    // https://vitepress.dev/reference/default-theme-config
    nav: [
      { text: "\u4E3B\u9875", link: "/" },
      {
        text: "\u{1F525} \u4E13\u680F",
        items: [
          { text: "\u9762\u8BD5\u4E13\u680F", link: "/markdown/interview/" },
          { text: "Git", link: "/markdown/Git/" }
        ]
      },
      {
        text: "\u{1F525} \u524D\u7AEF\u6846\u67B6",
        items: [
          { text: "Vue", link: "/markdown/webFrame/vue/" },
          { text: "TypeScript", link: "/markdown/webFrame/TS/" },
          { text: "JS", link: "/markdown/webFrame/JS/" },
          { text: "CSS", link: "/markdown/webFrame/CSS/" }
        ]
      },
      {
        text: "\u603B\u7ED3",
        items: [
          { text: "2024\u603B\u7ED3", link: "/markdown/summary/2024/" }
        ]
      },
      {
        text: "\u7F16\u7A0B",
        items: [
          { text: "\u5B9E\u6218", link: "/markdown/programming/actualCombat/" },
          { text: "\u5B66\u4E60", link: "/markdown/programming/study/" }
        ]
      }
    ],
    sidebar: sidebar_default,
    socialLinks: [
      { icon: "github", link: "https://github.com/vuejs/vitepress" }
    ],
    editLink: {
      pattern: `${github}/tree/main/docs/:path`,
      text: "\u5728 GitHub \u4E0A\u7F16\u8F91\u6B64\u9875"
    },
    lastUpdatedText: "\u6700\u540E\u4E00\u6B21\u66F4\u65B0\u4E8E",
    footer: {
      message: `\u8BB0\u5F55\u4E2A\u4EBA\u53D1\u5C55`
    }
  }
});
export {
  config_default5 as default
};
//# sourceMappingURL=data:application/json;base64,
